{"ast":null,"code":"import'./Chessboard.css';import Tile from'../Tile/Tile';import Referee from'../../referee/Referee';import{useRef,useState}from'react';import{XAXIS,YAXIS,TeamType,PieceType,initialBoardState,GRIDSIZE,samePosition}from'../../Constants';import{jsx as _jsx}from\"react/jsx-runtime\";export default function Chessboard(){const[activePiece,setActivePiece]=useState(null);const[grabPosition,setGrabPosition]=useState({x:-1,y:-1});const[pieces,setPieces]=useState(initialBoardState);const chessboardRef=useRef(null);const referee=new Referee();function grabPiece(e){const chessboard=chessboardRef.current;const element=e.target;if(element.classList.contains(\"chess-piece\")&&chessboard){const grabX=Math.floor((e.clientX-chessboard.offsetLeft)/GRIDSIZE);const grabY=Math.abs(Math.ceil((e.clientY-chessboard.offsetTop-800)/GRIDSIZE));setGrabPosition({x:grabX,y:grabY});const x=e.clientX-GRIDSIZE/2;const y=e.clientY-GRIDSIZE/2;element.style.position=\"absolute\";element.style.left=`${x}px`;element.style.top=`${y}px`;setActivePiece(element);}}function movePiece(e){const chessboard=chessboardRef.current;if(activePiece&&chessboard){const x=e.clientX-50;const y=e.clientY-50;const minX=chessboard.offsetLeft-25;const minY=chessboard.offsetTop-25;const maxX=chessboard.offsetLeft+chessboard.clientWidth-75;const maxY=chessboard.offsetTop+chessboard.clientHeight-75;activePiece.style.position=\"absolute\";// x axis limits\nif(x<minX){activePiece.style.left=`${minX}px`;}else if(x>maxX){activePiece.style.left=`${maxX}px`;}else{activePiece.style.left=`${x}px`;}// y axis limits\nif(y<minY){activePiece.style.top=`${minY}px`;}else if(y>maxY){activePiece.style.top=`${maxY}px`;}else{activePiece.style.top=`${y}px`;}}}function dropPiece(e){const chessboard=chessboardRef.current;if(activePiece&&chessboard){// substracted 800 to align with chessboard axis (starting from bottom left)\nconst x=Math.floor((e.clientX-chessboard.offsetLeft)/GRIDSIZE);const y=Math.abs(Math.ceil((e.clientY-chessboard.offsetTop-800)/GRIDSIZE));const currentPiece=pieces.find(p=>samePosition(p.position,grabPosition));if(currentPiece){const validMove=referee.isValidMove(grabPosition,{x,y},currentPiece.type,currentPiece.team,pieces);const isEnPassantMove=Referee.isEnPassantMove(grabPosition,{x,y},currentPiece.type,currentPiece.team,pieces);const pawnDirecion=currentPiece.team===TeamType.OUR?1:-1;if(isEnPassantMove){const updatedPieces=pieces.reduce((results,piece)=>{if(samePosition(piece.position,grabPosition)){piece.enPassant=false;piece.position.x=x;piece.position.y=y;results.push(piece);}else if(!samePosition(piece.position,{x,y:y-pawnDirecion})){if(piece.type===PieceType.PAWN){piece.enPassant=false;}results.push(piece);}return results;},[]);setPieces(updatedPieces);}else if(validMove){const updatedPieces=pieces.reduce((results,piece)=>{if(samePosition(piece.position,grabPosition)){// SPECIAL MOVE\npiece.enPassant=Math.abs(grabPosition.y-y)===2&&piece.type===PieceType.PAWN;piece.position.x=x;piece.position.y=y;results.push(piece);}else if(!samePosition(piece.position,{x,y})){if(piece.type===PieceType.PAWN){piece.enPassant=false;}results.push(piece);}return results;},[]);setPieces(updatedPieces);}else{//reset piece position\nactivePiece.style.position='relative';activePiece.style.removeProperty(\"top\");activePiece.style.removeProperty(\"left\");}}setActivePiece(null);}}let board=[];for(let y=YAXIS.length-1;y>=0;y--){for(let x=0;x<XAXIS.length;x++){// check whether the sum of numbers x,y is even to draw each tile\nconst isEven=(x+y+2)%2===0;let img=undefined;pieces.forEach(p=>{if(samePosition(p.position,{x:x,y:y})){img=p.image;}});board.push(/*#__PURE__*/_jsx(Tile,{isEven:isEven,image:img},`${x},${y}`));}}return/*#__PURE__*/_jsx(\"div\",{onMouseMove:e=>movePiece(e),onMouseDown:e=>grabPiece(e),onMouseUp:e=>dropPiece(e),id:\"chessboard\",ref:chessboardRef,children:board});}","map":{"version":3,"names":["Tile","Referee","useRef","useState","XAXIS","YAXIS","TeamType","PieceType","initialBoardState","GRIDSIZE","samePosition","jsx","_jsx","Chessboard","activePiece","setActivePiece","grabPosition","setGrabPosition","x","y","pieces","setPieces","chessboardRef","referee","grabPiece","e","chessboard","current","element","target","classList","contains","grabX","Math","floor","clientX","offsetLeft","grabY","abs","ceil","clientY","offsetTop","style","position","left","top","movePiece","minX","minY","maxX","clientWidth","maxY","clientHeight","dropPiece","currentPiece","find","p","validMove","isValidMove","type","team","isEnPassantMove","pawnDirecion","OUR","updatedPieces","reduce","results","piece","enPassant","push","PAWN","removeProperty","board","length","isEven","img","undefined","forEach","image","onMouseMove","onMouseDown","onMouseUp","id","ref","children"],"sources":["/home/Outer/Documents/CHESSS/src/components/Chessboard/Chessboard.tsx"],"sourcesContent":["import './Chessboard.css';\nimport Tile from '../Tile/Tile'\nimport Referee from '../../referee/Referee'\nimport { useRef, useState } from 'react';\nimport { XAXIS, YAXIS, Piece, TeamType, PieceType, initialBoardState, Position, GRIDSIZE, samePosition } from '../../Constants';\n\nexport default function Chessboard(){\nconst [activePiece, setActivePiece] = useState<HTMLElement | null>(null)\nconst [grabPosition, setGrabPosition] = useState<Position>({x:-1, y:-1});\nconst [pieces, setPieces] = useState<Piece[]>(initialBoardState);\nconst chessboardRef = useRef<HTMLDivElement>(null);\nconst referee = new Referee();\n\nfunction grabPiece(e: React.MouseEvent){\n    const chessboard = chessboardRef.current;\n    const element = e.target as HTMLElement;\n\n    if(element.classList.contains(\"chess-piece\") && chessboard){\n        const grabX = Math.floor((e.clientX - chessboard.offsetLeft)/GRIDSIZE)\n        const grabY = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800)/GRIDSIZE))\n        setGrabPosition({x:grabX, y:grabY})\n\n        const x = e.clientX - GRIDSIZE/2;\n        const y = e.clientY -GRIDSIZE/2;\n        element.style.position=\"absolute\";\n        element.style.left = `${x}px`;\n        element.style.top = `${y}px`;\n\n\n\n        setActivePiece(element);\n    }\n}\n\nfunction movePiece(e: React.MouseEvent){\n    const chessboard = chessboardRef.current;\n    if(activePiece && chessboard){\n        const x = e.clientX -50;\n        const y = e.clientY -50;\n\n        const minX = chessboard.offsetLeft -25;\n        const minY = chessboard.offsetTop -25;\n        const maxX = chessboard.offsetLeft + chessboard.clientWidth -75 ;\n        const maxY = chessboard.offsetTop + chessboard.clientHeight -75;\n\n        activePiece.style.position=\"absolute\";\n\n\n        // x axis limits\n        if(x<minX){\n            activePiece.style.left = `${minX}px`;\n        } else if(x>maxX){\n            activePiece.style.left = `${maxX}px`;\n        } else{\n            activePiece.style.left = `${x}px`;\n        }\n\n        // y axis limits\n        if(y<minY){\n            activePiece.style.top = `${minY}px`;\n        } else if(y>maxY){\n            activePiece.style.top = `${maxY}px`;\n        } else{\n            activePiece.style.top = `${y}px`;\n        }\n        \n    }\n}\n\nfunction dropPiece(e: React.MouseEvent){\n    const chessboard = chessboardRef.current;\n    if(activePiece && chessboard){\n        // substracted 800 to align with chessboard axis (starting from bottom left)\n        const x=Math.floor((e.clientX - chessboard.offsetLeft)/GRIDSIZE);\n        const y=Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800)/GRIDSIZE));\n\n        const currentPiece = pieces.find(\n            (p)=> samePosition(p.position, grabPosition));\n\n        if(currentPiece){\n            const validMove = referee.isValidMove(grabPosition, {x,y}, currentPiece.type,currentPiece.team, pieces);\n            const isEnPassantMove = Referee.isEnPassantMove(grabPosition, {x,y},currentPiece.type,currentPiece.team, pieces)\n            const pawnDirecion = currentPiece.team === TeamType.OUR?1:-1;\n\n            if(isEnPassantMove){\n                const updatedPieces = pieces.reduce((results, piece)=>{\n                    if(samePosition(piece.position, grabPosition)){\n                        piece.enPassant=false;\n                        piece.position.x=x;\n                        piece.position.y=y;\n                        results.push(piece);\n                    }else if(!samePosition(piece.position, {x, y: y-pawnDirecion})){\n                        if(piece.type===PieceType.PAWN){\n                            piece.enPassant=false;\n                        }\n                        results.push(piece);\n                    }                   \n\n\n                    return results;\n                }, [] as Piece[])\n                setPieces(updatedPieces);\n            }else if(validMove){\n                const updatedPieces = pieces.reduce((results,piece)=>{\n                    if(samePosition(piece.position, grabPosition)){\n                        // SPECIAL MOVE\n                        piece.enPassant = Math.abs(grabPosition.y-y)===2 &&(piece.type===PieceType.PAWN)\n                        piece.position.x=x;\n                        piece.position.y=y;\n                        results.push(piece);\n                    }else if(!(samePosition(piece.position, {x,y}))){\n                        if(piece.type===PieceType.PAWN){\n                            piece.enPassant=false;\n                        }\n                        results.push(piece);\n                    }                  \n\n                    return results;\n                }, [] as Piece[])\n                setPieces(updatedPieces);\n            }else{\n                //reset piece position\n                    activePiece.style.position= 'relative';\n                    activePiece.style.removeProperty(\"top\");\n                    activePiece.style.removeProperty(\"left\");\n\n            }\n        }\n\n        \n        setActivePiece(null);\n    }\n}\n\n\n\n    let board = [];\n\n    for(let y= YAXIS.length-1;y>=0;y--){\n        for(let x=0;x<XAXIS.length;x++){\n\n            // check whether the sum of numbers x,y is even to draw each tile\n            const isEven = (x+y+2)%2===0;\n            let img = undefined;\n\n            pieces.forEach(p=> {\n                if(samePosition(p.position, {x:x, y:y})){\n                    img=p.image\n                }\n            })\n\n            \n            board.push(\n                    <Tile key={`${x},${y}`} isEven={isEven} image={img}/> \n            )\n        }\n        }       \n\n\n    return <div \n        onMouseMove={(e)=>movePiece(e)} \n        onMouseDown={e=> grabPiece(e)} \n        onMouseUp={(e)=> dropPiece(e)}\n        id=\"chessboard\"\n        ref={chessboardRef}>\n            {board}\n    </div>\n}"],"mappings":"AAAA,MAAO,kBAAkB,CACzB,MAAO,CAAAA,IAAI,KAAM,cAAc,CAC/B,MAAO,CAAAC,OAAO,KAAM,uBAAuB,CAC3C,OAASC,MAAM,CAAEC,QAAQ,KAAQ,OAAO,CACxC,OAASC,KAAK,CAAEC,KAAK,CAASC,QAAQ,CAAEC,SAAS,CAAEC,iBAAiB,CAAYC,QAAQ,CAAEC,YAAY,KAAQ,iBAAiB,CAAC,OAAAC,GAAA,IAAAC,IAAA,yBAEhI,cAAe,SAAS,CAAAC,UAAUA,CAAA,CAAE,CACpC,KAAM,CAACC,WAAW,CAAEC,cAAc,CAAC,CAAGZ,QAAQ,CAAqB,IAAI,CAAC,CACxE,KAAM,CAACa,YAAY,CAAEC,eAAe,CAAC,CAAGd,QAAQ,CAAW,CAACe,CAAC,CAAC,CAAC,CAAC,CAAEC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CACxE,KAAM,CAACC,MAAM,CAAEC,SAAS,CAAC,CAAGlB,QAAQ,CAAUK,iBAAiB,CAAC,CAChE,KAAM,CAAAc,aAAa,CAAGpB,MAAM,CAAiB,IAAI,CAAC,CAClD,KAAM,CAAAqB,OAAO,CAAG,GAAI,CAAAtB,OAAO,CAAC,CAAC,CAE7B,QAAS,CAAAuB,SAASA,CAACC,CAAmB,CAAC,CACnC,KAAM,CAAAC,UAAU,CAAGJ,aAAa,CAACK,OAAO,CACxC,KAAM,CAAAC,OAAO,CAAGH,CAAC,CAACI,MAAqB,CAEvC,GAAGD,OAAO,CAACE,SAAS,CAACC,QAAQ,CAAC,aAAa,CAAC,EAAIL,UAAU,CAAC,CACvD,KAAM,CAAAM,KAAK,CAAGC,IAAI,CAACC,KAAK,CAAC,CAACT,CAAC,CAACU,OAAO,CAAGT,UAAU,CAACU,UAAU,EAAE3B,QAAQ,CAAC,CACtE,KAAM,CAAA4B,KAAK,CAAGJ,IAAI,CAACK,GAAG,CAACL,IAAI,CAACM,IAAI,CAAC,CAACd,CAAC,CAACe,OAAO,CAAGd,UAAU,CAACe,SAAS,CAAG,GAAG,EAAEhC,QAAQ,CAAC,CAAC,CACpFQ,eAAe,CAAC,CAACC,CAAC,CAACc,KAAK,CAAEb,CAAC,CAACkB,KAAK,CAAC,CAAC,CAEnC,KAAM,CAAAnB,CAAC,CAAGO,CAAC,CAACU,OAAO,CAAG1B,QAAQ,CAAC,CAAC,CAChC,KAAM,CAAAU,CAAC,CAAGM,CAAC,CAACe,OAAO,CAAE/B,QAAQ,CAAC,CAAC,CAC/BmB,OAAO,CAACc,KAAK,CAACC,QAAQ,CAAC,UAAU,CACjCf,OAAO,CAACc,KAAK,CAACE,IAAI,CAAG,GAAG1B,CAAC,IAAI,CAC7BU,OAAO,CAACc,KAAK,CAACG,GAAG,CAAG,GAAG1B,CAAC,IAAI,CAI5BJ,cAAc,CAACa,OAAO,CAAC,CAC3B,CACJ,CAEA,QAAS,CAAAkB,SAASA,CAACrB,CAAmB,CAAC,CACnC,KAAM,CAAAC,UAAU,CAAGJ,aAAa,CAACK,OAAO,CACxC,GAAGb,WAAW,EAAIY,UAAU,CAAC,CACzB,KAAM,CAAAR,CAAC,CAAGO,CAAC,CAACU,OAAO,CAAE,EAAE,CACvB,KAAM,CAAAhB,CAAC,CAAGM,CAAC,CAACe,OAAO,CAAE,EAAE,CAEvB,KAAM,CAAAO,IAAI,CAAGrB,UAAU,CAACU,UAAU,CAAE,EAAE,CACtC,KAAM,CAAAY,IAAI,CAAGtB,UAAU,CAACe,SAAS,CAAE,EAAE,CACrC,KAAM,CAAAQ,IAAI,CAAGvB,UAAU,CAACU,UAAU,CAAGV,UAAU,CAACwB,WAAW,CAAE,EAAE,CAC/D,KAAM,CAAAC,IAAI,CAAGzB,UAAU,CAACe,SAAS,CAAGf,UAAU,CAAC0B,YAAY,CAAE,EAAE,CAE/DtC,WAAW,CAAC4B,KAAK,CAACC,QAAQ,CAAC,UAAU,CAGrC;AACA,GAAGzB,CAAC,CAAC6B,IAAI,CAAC,CACNjC,WAAW,CAAC4B,KAAK,CAACE,IAAI,CAAG,GAAGG,IAAI,IAAI,CACxC,CAAC,IAAM,IAAG7B,CAAC,CAAC+B,IAAI,CAAC,CACbnC,WAAW,CAAC4B,KAAK,CAACE,IAAI,CAAG,GAAGK,IAAI,IAAI,CACxC,CAAC,IAAK,CACFnC,WAAW,CAAC4B,KAAK,CAACE,IAAI,CAAG,GAAG1B,CAAC,IAAI,CACrC,CAEA;AACA,GAAGC,CAAC,CAAC6B,IAAI,CAAC,CACNlC,WAAW,CAAC4B,KAAK,CAACG,GAAG,CAAG,GAAGG,IAAI,IAAI,CACvC,CAAC,IAAM,IAAG7B,CAAC,CAACgC,IAAI,CAAC,CACbrC,WAAW,CAAC4B,KAAK,CAACG,GAAG,CAAG,GAAGM,IAAI,IAAI,CACvC,CAAC,IAAK,CACFrC,WAAW,CAAC4B,KAAK,CAACG,GAAG,CAAG,GAAG1B,CAAC,IAAI,CACpC,CAEJ,CACJ,CAEA,QAAS,CAAAkC,SAASA,CAAC5B,CAAmB,CAAC,CACnC,KAAM,CAAAC,UAAU,CAAGJ,aAAa,CAACK,OAAO,CACxC,GAAGb,WAAW,EAAIY,UAAU,CAAC,CACzB;AACA,KAAM,CAAAR,CAAC,CAACe,IAAI,CAACC,KAAK,CAAC,CAACT,CAAC,CAACU,OAAO,CAAGT,UAAU,CAACU,UAAU,EAAE3B,QAAQ,CAAC,CAChE,KAAM,CAAAU,CAAC,CAACc,IAAI,CAACK,GAAG,CAACL,IAAI,CAACM,IAAI,CAAC,CAACd,CAAC,CAACe,OAAO,CAAGd,UAAU,CAACe,SAAS,CAAG,GAAG,EAAEhC,QAAQ,CAAC,CAAC,CAE9E,KAAM,CAAA6C,YAAY,CAAGlC,MAAM,CAACmC,IAAI,CAC3BC,CAAC,EAAI9C,YAAY,CAAC8C,CAAC,CAACb,QAAQ,CAAE3B,YAAY,CAAC,CAAC,CAEjD,GAAGsC,YAAY,CAAC,CACZ,KAAM,CAAAG,SAAS,CAAGlC,OAAO,CAACmC,WAAW,CAAC1C,YAAY,CAAE,CAACE,CAAC,CAACC,CAAC,CAAC,CAAEmC,YAAY,CAACK,IAAI,CAACL,YAAY,CAACM,IAAI,CAAExC,MAAM,CAAC,CACvG,KAAM,CAAAyC,eAAe,CAAG5D,OAAO,CAAC4D,eAAe,CAAC7C,YAAY,CAAE,CAACE,CAAC,CAACC,CAAC,CAAC,CAACmC,YAAY,CAACK,IAAI,CAACL,YAAY,CAACM,IAAI,CAAExC,MAAM,CAAC,CAChH,KAAM,CAAA0C,YAAY,CAAGR,YAAY,CAACM,IAAI,GAAKtD,QAAQ,CAACyD,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAE5D,GAAGF,eAAe,CAAC,CACf,KAAM,CAAAG,aAAa,CAAG5C,MAAM,CAAC6C,MAAM,CAAC,CAACC,OAAO,CAAEC,KAAK,GAAG,CAClD,GAAGzD,YAAY,CAACyD,KAAK,CAACxB,QAAQ,CAAE3B,YAAY,CAAC,CAAC,CAC1CmD,KAAK,CAACC,SAAS,CAAC,KAAK,CACrBD,KAAK,CAACxB,QAAQ,CAACzB,CAAC,CAACA,CAAC,CAClBiD,KAAK,CAACxB,QAAQ,CAACxB,CAAC,CAACA,CAAC,CAClB+C,OAAO,CAACG,IAAI,CAACF,KAAK,CAAC,CACvB,CAAC,IAAK,IAAG,CAACzD,YAAY,CAACyD,KAAK,CAACxB,QAAQ,CAAE,CAACzB,CAAC,CAAEC,CAAC,CAAEA,CAAC,CAAC2C,YAAY,CAAC,CAAC,CAAC,CAC3D,GAAGK,KAAK,CAACR,IAAI,GAAGpD,SAAS,CAAC+D,IAAI,CAAC,CAC3BH,KAAK,CAACC,SAAS,CAAC,KAAK,CACzB,CACAF,OAAO,CAACG,IAAI,CAACF,KAAK,CAAC,CACvB,CAGA,MAAO,CAAAD,OAAO,CAClB,CAAC,CAAE,EAAa,CAAC,CACjB7C,SAAS,CAAC2C,aAAa,CAAC,CAC5B,CAAC,IAAK,IAAGP,SAAS,CAAC,CACf,KAAM,CAAAO,aAAa,CAAG5C,MAAM,CAAC6C,MAAM,CAAC,CAACC,OAAO,CAACC,KAAK,GAAG,CACjD,GAAGzD,YAAY,CAACyD,KAAK,CAACxB,QAAQ,CAAE3B,YAAY,CAAC,CAAC,CAC1C;AACAmD,KAAK,CAACC,SAAS,CAAGnC,IAAI,CAACK,GAAG,CAACtB,YAAY,CAACG,CAAC,CAACA,CAAC,CAAC,GAAG,CAAC,EAAIgD,KAAK,CAACR,IAAI,GAAGpD,SAAS,CAAC+D,IAAK,CAChFH,KAAK,CAACxB,QAAQ,CAACzB,CAAC,CAACA,CAAC,CAClBiD,KAAK,CAACxB,QAAQ,CAACxB,CAAC,CAACA,CAAC,CAClB+C,OAAO,CAACG,IAAI,CAACF,KAAK,CAAC,CACvB,CAAC,IAAK,IAAG,CAAEzD,YAAY,CAACyD,KAAK,CAACxB,QAAQ,CAAE,CAACzB,CAAC,CAACC,CAAC,CAAC,CAAE,CAAC,CAC5C,GAAGgD,KAAK,CAACR,IAAI,GAAGpD,SAAS,CAAC+D,IAAI,CAAC,CAC3BH,KAAK,CAACC,SAAS,CAAC,KAAK,CACzB,CACAF,OAAO,CAACG,IAAI,CAACF,KAAK,CAAC,CACvB,CAEA,MAAO,CAAAD,OAAO,CAClB,CAAC,CAAE,EAAa,CAAC,CACjB7C,SAAS,CAAC2C,aAAa,CAAC,CAC5B,CAAC,IAAI,CACD;AACIlD,WAAW,CAAC4B,KAAK,CAACC,QAAQ,CAAE,UAAU,CACtC7B,WAAW,CAAC4B,KAAK,CAAC6B,cAAc,CAAC,KAAK,CAAC,CACvCzD,WAAW,CAAC4B,KAAK,CAAC6B,cAAc,CAAC,MAAM,CAAC,CAEhD,CACJ,CAGAxD,cAAc,CAAC,IAAI,CAAC,CACxB,CACJ,CAII,GAAI,CAAAyD,KAAK,CAAG,EAAE,CAEd,IAAI,GAAI,CAAArD,CAAC,CAAEd,KAAK,CAACoE,MAAM,CAAC,CAAC,CAACtD,CAAC,EAAE,CAAC,CAACA,CAAC,EAAE,CAAC,CAC/B,IAAI,GAAI,CAAAD,CAAC,CAAC,CAAC,CAACA,CAAC,CAACd,KAAK,CAACqE,MAAM,CAACvD,CAAC,EAAE,CAAC,CAE3B;AACA,KAAM,CAAAwD,MAAM,CAAG,CAACxD,CAAC,CAACC,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,CAAC,CAC5B,GAAI,CAAAwD,GAAG,CAAGC,SAAS,CAEnBxD,MAAM,CAACyD,OAAO,CAACrB,CAAC,EAAG,CACf,GAAG9C,YAAY,CAAC8C,CAAC,CAACb,QAAQ,CAAE,CAACzB,CAAC,CAACA,CAAC,CAAEC,CAAC,CAACA,CAAC,CAAC,CAAC,CAAC,CACpCwD,GAAG,CAACnB,CAAC,CAACsB,KAAK,CACf,CACJ,CAAC,CAAC,CAGFN,KAAK,CAACH,IAAI,cACFzD,IAAA,CAACZ,IAAI,EAAmB0E,MAAM,CAAEA,MAAO,CAACI,KAAK,CAAEH,GAAI,EAAxC,GAAGzD,CAAC,IAAIC,CAAC,EAAgC,CAC5D,CAAC,CACL,CACA,CAGJ,mBAAOP,IAAA,QACHmE,WAAW,CAAGtD,CAAC,EAAGqB,SAAS,CAACrB,CAAC,CAAE,CAC/BuD,WAAW,CAAEvD,CAAC,EAAGD,SAAS,CAACC,CAAC,CAAE,CAC9BwD,SAAS,CAAGxD,CAAC,EAAI4B,SAAS,CAAC5B,CAAC,CAAE,CAC9ByD,EAAE,CAAC,YAAY,CACfC,GAAG,CAAE7D,aAAc,CAAA8D,QAAA,CACdZ,KAAK,CACT,CAAC,CACV","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}