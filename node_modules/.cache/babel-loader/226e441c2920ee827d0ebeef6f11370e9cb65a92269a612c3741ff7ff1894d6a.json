{"ast":null,"code":"var _jsxFileName = \"/home/Outer/Documents/chess-app/src/components/Chessboard.tsx\";\nimport React from 'react';\nimport './Chessboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst N = 8;\nconst xAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst yAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nexport default function Chessboard() {\n  let board = [];\n  for (let x = 0; x < N; x++) {\n    for (let y = N - 1; y >= 0; y--) {\n      // check if sum of numbers x,y is even to draw the board\n      const number = x + y + 2;\n      if (number % 2 == 0) {\n        board.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tile blacktile\",\n          children: [\"[\", xAxis[x], \":\", yAxis[y], \"] \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 28\n        }, this));\n      } else {\n        board.push(/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tile blacktile\",\n          children: [\"[\", xAxis[x], \":\", yAxis[y], \"] \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 28\n        }, this));\n      }\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 12\n  }, this);\n}\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","N","xAxis","yAxis","Chessboard","board","x","y","number","push","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","_c","$RefreshReg$"],"sources":["/home/Outer/Documents/chess-app/src/components/Chessboard.tsx"],"sourcesContent":["import React from 'react';\nimport './Chessboard.css';\n\nconst N = 8;\nconst xAxis = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"];\nconst yAxis = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"];\n\n\nexport default function Chessboard(){\n    let board = [];\n\n    for(let x=0;x<N;x++){\n        for(let y=N-1;y>=0;y--){\n\n            // check if sum of numbers x,y is even to draw the board\n            const number = x+y+2;\n            if(number%2==0){\n                board.push(<div className='tile blacktile'>[{xAxis[x]}:{yAxis[y]}] </div>);\n            } else{\n                board.push(<div className='tile blacktile'>[{xAxis[x]}:{yAxis[y]}] </div>);\n            }\n        }       \n    }\n\n\n\n    return <div id=\"chessboard\">{board}</div>\n}"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,CAAC,GAAG,CAAC;AACX,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;AAC/C,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;AAG/C,eAAe,SAASC,UAAUA,CAAA,EAAE;EAChC,IAAIC,KAAK,GAAG,EAAE;EAEd,KAAI,IAAIC,CAAC,GAAC,CAAC,EAACA,CAAC,GAACL,CAAC,EAACK,CAAC,EAAE,EAAC;IAChB,KAAI,IAAIC,CAAC,GAACN,CAAC,GAAC,CAAC,EAACM,CAAC,IAAE,CAAC,EAACA,CAAC,EAAE,EAAC;MAEnB;MACA,MAAMC,MAAM,GAAGF,CAAC,GAACC,CAAC,GAAC,CAAC;MACpB,IAAGC,MAAM,GAAC,CAAC,IAAE,CAAC,EAAC;QACXH,KAAK,CAACI,IAAI,cAACT,OAAA;UAAKU,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAAC,GAAC,EAACT,KAAK,CAACI,CAAC,CAAC,EAAC,GAAC,EAACH,KAAK,CAACI,CAAC,CAAC,EAAC,IAAE;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,CAAC;MAC9E,CAAC,MAAK;QACFV,KAAK,CAACI,IAAI,cAACT,OAAA;UAAKU,SAAS,EAAC,gBAAgB;UAAAC,QAAA,GAAC,GAAC,EAACT,KAAK,CAACI,CAAC,CAAC,EAAC,GAAC,EAACH,KAAK,CAACI,CAAC,CAAC,EAAC,IAAE;QAAA;UAAAK,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,CAAC;MAC9E;IACJ;EACJ;EAIA,oBAAOf,OAAA;IAAKgB,EAAE,EAAC,YAAY;IAAAL,QAAA,EAAEN;EAAK;IAAAO,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC7C;AAACE,EAAA,GAnBuBb,UAAU;AAAA,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}