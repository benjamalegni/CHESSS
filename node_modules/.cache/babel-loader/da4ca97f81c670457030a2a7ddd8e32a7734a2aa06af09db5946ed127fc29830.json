{"ast":null,"code":"import { PieceType } from \"../components/Chessboard/Chessboard\";\nimport { TeamType } from \"../components/Chessboard/Chessboard\";\nexport default class Referee {\n  tileIsOccupied(x, y, boardState) {\n    const piece = boardState.find(p => p.x === x && p.y === y);\n    return piece != undefined;\n  }\n  tileIsOccupiedByOpponent(x, y, boardState, team) {\n    const piece = boardState.find(p => p.x === x && p.y === y && p.team !== team);\n    return piece ? true : false;\n  }\n  isEnPassantMove(px, py, x, y, type, team, boardState) {\n    const pawnDirection = team === TeamType.OUR ? 1 : -1;\n    if (type === PieceType.PAWN) {\n      if (y - py === pawnDirection && (x - px === -1 || x - px === 1)) {\n        const piece = boardState.find(p => p.x === x && p.y === y - pawnDirection && p.enPassant === true);\n        return true;\n      }\n    }\n    return false;\n  }\n  isValidMove(px, py, x, y, type, team, boardState) {\n    console.log(`referee checking.. piece: ${type}`);\n    //movement\n    if (type === PieceType.PAWN) {\n      const specialRow = team === TeamType.OUR ? 1 : 6;\n      const pawnDirection = team === TeamType.OUR ? 1 : -1;\n      if (px === x && py === specialRow && y - py === 2 * pawnDirection) {\n        if (!this.tileIsOccupied(x, y, boardState) && !this.tileIsOccupied(x, y - pawnDirection, boardState)) {\n          return true;\n        }\n      } else if (px === x && y - py === pawnDirection) {\n        if (!this.tileIsOccupied(x, y, boardState)) {\n          return true;\n        }\n      }\n      //attack\n      else if (y - py === pawnDirection && (x - px === -1 || x - px === 1)) {\n        if (this.tileIsOccupiedByOpponent(x, y, boardState, team)) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n}","map":{"version":3,"names":["PieceType","TeamType","Referee","tileIsOccupied","x","y","boardState","piece","find","p","undefined","tileIsOccupiedByOpponent","team","isEnPassantMove","px","py","type","pawnDirection","OUR","PAWN","enPassant","isValidMove","console","log","specialRow"],"sources":["/home/Outer/Documents/chess-app/src/referee/Referee.ts"],"sourcesContent":["import { PieceType } from \"../components/Chessboard/Chessboard\";\nimport {TeamType} from \"../components/Chessboard/Chessboard\"\nimport {Piece} from \"../components/Chessboard/Chessboard\"\n\n\n\nexport default class Referee{\n    tileIsOccupied(x: number,y: number, boardState: Piece[]):boolean{\n        const piece = boardState.find(p=> p.x===x && p.y===y)\n        return piece!=undefined;\n    }\n\n    tileIsOccupiedByOpponent(x:number, y:number, boardState:Piece[], team:TeamType):boolean{\n        const piece = boardState.find((p)=>p.x===x && p.y===y && p.team!==team);\n        return piece?true:false;\n    }\n\n    isEnPassantMove(px:number, py:number, x:number, y:number, type:PieceType, team:TeamType, boardState:Piece[]):boolean{\n        const pawnDirection = (team === TeamType.OUR)? 1:-1;\n\n        if(type===PieceType.PAWN){\n            if(y-py===pawnDirection && ((x-px===-1) || (x-px===1))){\n                const piece = boardState.find((p)=> p.x===x && (p.y===y - pawnDirection && p.enPassant===true));\n\n                return true;\n            }\n        }\n        return false;\n    }\n\n    isValidMove(px:number, py:number, x:number, y:number, type:PieceType, team:TeamType, boardState:Piece[]){\n        console.log(`referee checking.. piece: ${type}`);\n        //movement\n        if(type === PieceType.PAWN){\n            const specialRow = (team === TeamType.OUR)?1:6;\n            const pawnDirection = (team === TeamType.OUR)? 1:-1;\n\n            if(px===x && py===specialRow && y-py===2*pawnDirection){\n                if(!this.tileIsOccupied(x,y,boardState) && !this.tileIsOccupied(x,y - pawnDirection, boardState)){\n                    return true;\n                }\n            }else if(px===x && y-py===pawnDirection){\n                    if(!this.tileIsOccupied(x,y,boardState)){\n                        return true;\n                    }\n            }\n            //attack\n            else if(y-py===pawnDirection && ((x-px===-1) || (x-px===1))){\n                if(this.tileIsOccupiedByOpponent(x,y,boardState,team)){\n                    return true;\n                }\n            }\n\n        }\n\n        return false;\n    }\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}