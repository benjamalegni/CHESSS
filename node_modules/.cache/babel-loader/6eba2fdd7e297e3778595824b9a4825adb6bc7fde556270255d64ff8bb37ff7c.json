{"ast":null,"code":"var _jsxFileName = \"/home/Outer/Documents/chess-app/src/components/Chessboard/Chessboard.tsx\",\n  _s = $RefreshSig$();\nimport './Chessboard.css';\nimport Tile from '../Tile/Tile';\nimport Referee from '../../referee/Referee';\nimport { useRef, useState } from 'react';\nimport { xAxis, yAxis, TeamType, PieceType, initialBoardState } from '../../Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst N = 8;\nexport default function Chessboard() {\n  _s();\n  const [activePiece, setActivePiece] = useState(null);\n  const [grabPosition, setGrabPosition] = useState({\n    x: -1,\n    y: -1\n  });\n  const [pieces, setPieces] = useState(initialBoardState);\n  const chessboardRef = useRef(null);\n  const referee = new Referee();\n  function grabPiece(e) {\n    const chessboard = chessboardRef.current;\n    const element = e.target;\n    if (element.classList.contains(\"chess-piece\") && chessboard) {\n      const grabX = Math.floor((e.clientX - chessboard.offsetLeft) / 100);\n      const grabY = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / 100));\n      setGrabPosition({\n        x: grabX,\n        y: grabY\n      });\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      setActivePiece(element);\n    }\n  }\n  function movePiece(e) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\n      activePiece.style.position = \"absolute\";\n\n      // x axis limits\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      } else {\n        activePiece.style.left = `${x}px`;\n      }\n\n      // y axis limits\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      } else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n  function dropPiece(e) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      // substracted 800 to align with chessboard axis (starting from bottom left)\n      const x = Math.floor((e.clientX - chessboard.offsetLeft) / 100);\n      const y = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / 100));\n      const currentPiece = pieces.find(p => p.position.x === xAxis && p.position.y === yAxis);\n      const attackedPiece = pieces.find(p => p.position.x === x && p.position.y === y);\n      if (currentPiece) {\n        const validMove = referee.isValidMove(xAxis, yAxis, x, y, currentPiece.type, currentPiece.team, pieces);\n        const isEnPassantMove = referee.isEnPassantMove(xAxis, yAxis, x, y, currentPiece.type, currentPiece.team, pieces);\n        const pawnDirecion = currentPiece.team === TeamType.OUR ? 1 : -1;\n        if (isEnPassantMove) {\n          const updatedPieces = pieces.reduce((results, piece) => {\n            if (piece.position.x === grabPosition.x && piece.position.y === yAxis) {\n              piece.enPassant = false;\n              piece.position.x = x;\n              piece.position.y = y;\n              results.push(piece);\n            } else if (!(piece.position.x === x && piece.position.y === y - pawnDirecion)) {\n              if (piece.type === PieceType.PAWN) {\n                piece.enPassant = false;\n              }\n              results.push(piece);\n            }\n            return results;\n          }, []);\n          setPieces(updatedPieces);\n        } else if (validMove) {\n          const updatedPieces = pieces.reduce((results, piece) => {\n            if (piece.position.x === xAxis && piece.position.y === yAxis) {\n              if (Math.abs(yAxis - y) === 2 && piece.type === PieceType.PAWN) {\n                piece.enPassant = true;\n              }\n              piece.position.x = x;\n              piece.position.y = y;\n              results.push(piece);\n            } else if (!(piece.position.x === x && piece.position.y === y)) {\n              if (piece.type === PieceType.PAWN) {\n                piece.enPassant = false;\n              }\n              results.push(piece);\n            }\n            return results;\n          }, []);\n          setPieces(updatedPieces);\n        } else {\n          //reset piece position\n          activePiece.style.position = 'relative';\n          activePiece.style.removeProperty(\"top\");\n          activePiece.style.removeProperty(\"left\");\n        }\n      }\n      setActivePiece(null);\n    }\n  }\n  let board = [];\n  for (let y = N - 1; y >= 0; y--) {\n    for (let x = 0; x < N; x++) {\n      // check whether the sum of numbers x,y is even to draw each tile\n      const isEven = (x + y + 2) % 2 === 0;\n      let img = undefined;\n      pieces.forEach(p => {\n        if (p.position.x === x && p.position.y === y) {\n          img = p.image;\n        }\n      });\n      board.push(/*#__PURE__*/_jsxDEV(Tile, {\n        isEven: isEven,\n        image: img\n      }, `${x},${y}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseMove: e => movePiece(e),\n    onMouseDown: e => grabPiece(e),\n    onMouseUp: e => dropPiece(e),\n    id: \"chessboard\",\n    ref: chessboardRef,\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 12\n  }, this);\n}\n_s(Chessboard, \"3//4+8cIpoQJ3ZJkc2T4H6kMoK0=\");\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["Tile","Referee","useRef","useState","xAxis","yAxis","TeamType","PieceType","initialBoardState","jsxDEV","_jsxDEV","N","Chessboard","_s","activePiece","setActivePiece","grabPosition","setGrabPosition","x","y","pieces","setPieces","chessboardRef","referee","grabPiece","e","chessboard","current","element","target","classList","contains","grabX","Math","floor","clientX","offsetLeft","grabY","abs","ceil","clientY","offsetTop","style","position","left","top","movePiece","minX","minY","maxX","clientWidth","maxY","clientHeight","dropPiece","currentPiece","find","p","attackedPiece","validMove","isValidMove","type","team","isEnPassantMove","pawnDirecion","OUR","updatedPieces","reduce","results","piece","enPassant","push","PAWN","removeProperty","board","isEven","img","undefined","forEach","image","fileName","_jsxFileName","lineNumber","columnNumber","onMouseMove","onMouseDown","onMouseUp","id","ref","children","_c","$RefreshReg$"],"sources":["/home/Outer/Documents/chess-app/src/components/Chessboard/Chessboard.tsx"],"sourcesContent":["import './Chessboard.css';\nimport Tile from '../Tile/Tile'\nimport Referee from '../../referee/Referee'\nimport { useRef, useState } from 'react';\nimport { xAxis,yAxis, Piece, TeamType, PieceType, initialBoardState, Position } from '../../Constants';\n\nconst N = 8;\n\nexport default function Chessboard(){\nconst [activePiece, setActivePiece] = useState<HTMLElement | null>(null)\nconst [grabPosition, setGrabPosition] = useState<Position>({x:-1, y:-1});\nconst [pieces, setPieces] = useState<Piece[]>(initialBoardState);\nconst chessboardRef = useRef<HTMLDivElement>(null);\nconst referee = new Referee();\n\nfunction grabPiece(e: React.MouseEvent){\n    const chessboard = chessboardRef.current;\n    const element = e.target as HTMLElement;\n\n    if(element.classList.contains(\"chess-piece\") && chessboard){\n        const grabX = Math.floor((e.clientX - chessboard.offsetLeft)/100)\n        const grabY = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800)/100))\n        setGrabPosition({x:grabX, y:grabY})\n\n        const x = e.clientX -50;\n        const y = e.clientY -50;\n        element.style.position=\"absolute\";\n        element.style.left = `${x}px`;\n        element.style.top = `${y}px`;\n\n\n\n        setActivePiece(element);\n    }\n}\n\nfunction movePiece(e: React.MouseEvent){\n    const chessboard = chessboardRef.current;\n    if(activePiece && chessboard){\n        const x = e.clientX -50;\n        const y = e.clientY -50;\n\n        const minX = chessboard.offsetLeft -25;\n        const minY = chessboard.offsetTop -25;\n        const maxX = chessboard.offsetLeft + chessboard.clientWidth -75 ;\n        const maxY = chessboard.offsetTop + chessboard.clientHeight -75;\n\n        activePiece.style.position=\"absolute\";\n\n\n        // x axis limits\n        if(x<minX){\n            activePiece.style.left = `${minX}px`;\n        } else if(x>maxX){\n            activePiece.style.left = `${maxX}px`;\n        } else{\n            activePiece.style.left = `${x}px`;\n        }\n\n        // y axis limits\n        if(y<minY){\n            activePiece.style.top = `${minY}px`;\n        } else if(y>maxY){\n            activePiece.style.top = `${maxY}px`;\n        } else{\n            activePiece.style.top = `${y}px`;\n        }\n        \n    }\n}\n\nfunction dropPiece(e: React.MouseEvent){\n    const chessboard = chessboardRef.current;\n    if(activePiece && chessboard){\n        // substracted 800 to align with chessboard axis (starting from bottom left)\n        const x=Math.floor((e.clientX - chessboard.offsetLeft)/100);\n        const y=Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800)/100));\n\n        const currentPiece = pieces.find((p)=> p.position.x===xAxis && p.position.y===yAxis);\n        const attackedPiece = pieces.find((p)=> p.position.x===x && p.position.y===y);       \n        if(currentPiece){\n            const validMove = referee.isValidMove(xAxis,yAxis,x,y,currentPiece.type,currentPiece.team, pieces);\n            const isEnPassantMove = referee.isEnPassantMove(xAxis,yAxis,x,y,currentPiece.type,currentPiece.team, pieces)\n            const pawnDirecion = currentPiece.team === TeamType.OUR?1:-1;\n\n            if(isEnPassantMove){\n                const updatedPieces = pieces.reduce((results, piece)=>{\n                    if(piece.position.x===grabPosition.x && piece.position.y===yAxis){\n                        piece.enPassant=false;\n                        piece.position.x=x;\n                        piece.position.y=y;\n                        results.push(piece);\n                    }else if(!(piece.position.x===x && piece.position.y===y - pawnDirecion)){\n                        if(piece.type===PieceType.PAWN){\n                            piece.enPassant=false;\n                        }\n                        results.push(piece);\n                    }                   \n\n\n                    return results;\n                }, [] as Piece[])\n                setPieces(updatedPieces);\n            }else if(validMove){\n                const updatedPieces = pieces.reduce((results,piece)=>{\n                    if(piece.position.x===xAxis && piece.position.y===yAxis){\n                        if(Math.abs(yAxis-y)===2 &&(piece.type===PieceType.PAWN)){\n                            piece.enPassant=true;\n                        }\n                        piece.position.x=x;\n                        piece.position.y=y;\n                        results.push(piece);\n                    }else if(!(piece.position.x===x && piece.position.y===y)){\n                        if(piece.type===PieceType.PAWN){\n                            piece.enPassant=false;\n                        }\n                        results.push(piece);\n                    }                  \n\n                    return results;\n                }, [] as Piece[])\n                setPieces(updatedPieces);\n            }else{\n                //reset piece position\n                    activePiece.style.position= 'relative';\n                    activePiece.style.removeProperty(\"top\");\n                    activePiece.style.removeProperty(\"left\");\n\n            }\n        }\n\n        \n        setActivePiece(null);\n    }\n}\n\n\n\n    let board = [];\n\n    for(let y=N-1;y>=0;y--){\n        for(let x=0;x<N;x++){\n\n            // check whether the sum of numbers x,y is even to draw each tile\n            const isEven = (x+y+2)%2===0;\n            let img = undefined;\n\n            pieces.forEach(p=> {\n                if(p.position.x===x && p.position.y===y){\n                    img=p.image\n                }\n            })\n\n            \n            board.push(\n                    <Tile key={`${x},${y}`} isEven={isEven} image={img}/> \n            )\n        }\n        }       \n\n\n    return <div \n        onMouseMove={(e)=>movePiece(e)} \n        onMouseDown={e=> grabPiece(e)} \n        onMouseUp={(e)=> dropPiece(e)}\n        id=\"chessboard\"\n        ref={chessboardRef}>\n            {board}\n    </div>\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}