{"ast":null,"code":"var _jsxFileName = \"/home/Outer/Documents/chess-app/src/components/Chessboard/Chessboard.tsx\";\nimport './Chessboard.css';\nimport Tile from '../Tile/Tile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst N = 8;\nconst xAxis = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\"];\nconst yAxis = [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"];\nconst pieces = [];\npieces.push({\n  image: \"assets/images/pawn_w\",\n  x: 0,\n  y: 0\n});\nexport default function Chessboard() {\n  let board = [];\n  for (let x = 0; x < N; x++) {\n    for (let y = N - 1; y >= 0; y--) {\n      // check whether the sum of numbers x,y is even to draw each tile\n      const isEven = (x + y + 2) % 2 === 0;\n      let image = \"\";\n      pieces.forEach(p => {\n        if (p.x === x && p.y === y) {\n          image = p.image;\n        }\n      });\n      board.push(/*#__PURE__*/_jsxDEV(Tile, {\n        isEven: isEven,\n        image: image\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 24\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"chessboard\",\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 12\n  }, this);\n}\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["Tile","jsxDEV","_jsxDEV","N","xAxis","yAxis","pieces","push","image","x","y","Chessboard","board","isEven","forEach","p","fileName","_jsxFileName","lineNumber","columnNumber","id","children","_c","$RefreshReg$"],"sources":["/home/Outer/Documents/chess-app/src/components/Chessboard/Chessboard.tsx"],"sourcesContent":["import './Chessboard.css';\nimport Tile from '../Tile/Tile'\n\nconst N = 8;\nconst xAxis = [\"a\",\"b\",\"c\",\"d\",\"e\",\"f\",\"g\",\"h\"];\nconst yAxis = [\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\"];\n\ninterface Piece{\n    image: string\n    x: number\n    y: number\n}\n\nconst pieces:Piece[] = []\npieces.push({image:\"assets/images/pawn_w\",x:0 , y:0})\n\n\nexport default function Chessboard(){\n    let board = [];\n\n    for(let x=0;x<N;x++){\n        for(let y=N-1;y>=0;y--){\n\n            // check whether the sum of numbers x,y is even to draw each tile\n            const isEven = (x+y+2)%2===0;\n            let image = \"\";\n\n            pieces.forEach(p=> {\n                if(p.x===x && p.y===y){\n                    image=p.image\n                }\n            })\n\n\n            board.push(<Tile isEven={isEven} image={image}/>);\n        }       \n    }\n\n\n\n    return <div id=\"chessboard\">{board}</div>\n}"],"mappings":";AAAA,OAAO,kBAAkB;AACzB,OAAOA,IAAI,MAAM,cAAc;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE/B,MAAMC,CAAC,GAAG,CAAC;AACX,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;AAC/C,MAAMC,KAAK,GAAG,CAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,EAAC,GAAG,CAAC;AAQ/C,MAAMC,MAAc,GAAG,EAAE;AACzBA,MAAM,CAACC,IAAI,CAAC;EAACC,KAAK,EAAC,sBAAsB;EAACC,CAAC,EAAC,CAAC;EAAGC,CAAC,EAAC;AAAC,CAAC,CAAC;AAGrD,eAAe,SAASC,UAAUA,CAAA,EAAE;EAChC,IAAIC,KAAK,GAAG,EAAE;EAEd,KAAI,IAAIH,CAAC,GAAC,CAAC,EAACA,CAAC,GAACN,CAAC,EAACM,CAAC,EAAE,EAAC;IAChB,KAAI,IAAIC,CAAC,GAACP,CAAC,GAAC,CAAC,EAACO,CAAC,IAAE,CAAC,EAACA,CAAC,EAAE,EAAC;MAEnB;MACA,MAAMG,MAAM,GAAG,CAACJ,CAAC,GAACC,CAAC,GAAC,CAAC,IAAE,CAAC,KAAG,CAAC;MAC5B,IAAIF,KAAK,GAAG,EAAE;MAEdF,MAAM,CAACQ,OAAO,CAACC,CAAC,IAAG;QACf,IAAGA,CAAC,CAACN,CAAC,KAAGA,CAAC,IAAIM,CAAC,CAACL,CAAC,KAAGA,CAAC,EAAC;UAClBF,KAAK,GAACO,CAAC,CAACP,KAAK;QACjB;MACJ,CAAC,CAAC;MAGFI,KAAK,CAACL,IAAI,cAACL,OAAA,CAACF,IAAI;QAACa,MAAM,EAAEA,MAAO;QAACL,KAAK,EAAEA;MAAM;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,CAAC;IACrD;EACJ;EAIA,oBAAOjB,OAAA;IAAKkB,EAAE,EAAC,YAAY;IAAAC,QAAA,EAAET;EAAK;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;AAC7C;AAACG,EAAA,GAxBuBX,UAAU;AAAA,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}