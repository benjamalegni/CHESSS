{"ast":null,"code":"import { PieceType } from \"../components/Chessboard/Chessboard\";\nimport { TeamType } from \"../components/Chessboard/Chessboard\";\nexport default class Referee {\n  tileIsOccupied(x, y, boardState) {\n    const piece = boardState.find(p => p.x === x && p.y === y);\n    return piece != undefined;\n  }\n  isValidMove(px, py, x, y, type, team, boardState) {\n    console.log(`referee checking.. piece: ${type}`);\n    if (type === PieceType.PAWN) {\n      // our piece\n      if (team === TeamType.OUR) {\n        // first movement \n        if (py === 1) {\n          // if does not change position in X axis\n          if (px === x && y - py === 1) {\n            if (!this.tileIsOccupied(x, y, boardState)) {\n              return true;\n            }\n          } else if (px === x && y - py === 2) {\n            if (!this.tileIsOccupied(x, y, boardState) && !this.tileIsOccupied(x, y - 1, boardState)) {\n              console.log(\"tito calderon\");\n              return true;\n            }\n          }\n        } else {\n          // not the first movement\n          // allows movement of 1 posicion upwards\n          if (px === x && y - py === 1) {\n            if (!this.tileIsOccupied(x, y, boardState)) {\n              return true;\n            }\n          }\n        }\n      } else {\n        // opponent's piece\n        if (py === 6) {\n          if (px === x && (y - py === -1 || y - py === -2)) {\n            if (!this.tileIsOccupied(x, y, boardState)) {\n              return true;\n            }\n          }\n        } else {\n          if (px === x && y - py === -1) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n  }\n}","map":{"version":3,"names":["PieceType","TeamType","Referee","tileIsOccupied","x","y","boardState","piece","find","p","undefined","isValidMove","px","py","type","team","console","log","PAWN","OUR"],"sources":["/home/Outer/Documents/chess-app/src/referee/Referee.ts"],"sourcesContent":["import { PieceType } from \"../components/Chessboard/Chessboard\";\nimport {TeamType} from \"../components/Chessboard/Chessboard\"\nimport {Piece} from \"../components/Chessboard/Chessboard\"\n\n\n\nexport default class Referee{\n    tileIsOccupied(x: number,y: number, boardState: Piece[]):boolean{\n        const piece = boardState.find(p=> p.x===x && p.y===y)\n        return piece!=undefined;\n    }\n\n\n\n    isValidMove(px:number, py:number, x:number, y:number, type:PieceType, team:TeamType, boardState:Piece[]){\n        console.log(`referee checking.. piece: ${type}`);\n        \n        if(type === PieceType.PAWN){\n            // our piece\n            if(team === TeamType.OUR){\n                // first movement \n                if(py===1){\n                    // if does not change position in X axis\n                    if(px===x && y-py===1){\n                        if(!this.tileIsOccupied(x,y,boardState)){\n                            return true;\n                        }\n                    } else if(px === x && y-py ===2){\n                        if(!this.tileIsOccupied(x,y,boardState) && !this.tileIsOccupied(x,y-1,boardState)){\n                                console.log(\"tito calderon\")\n                                return true;\n                        }\n                    }\n                } else{\n                    // not the first movement\n                    // allows movement of 1 posicion upwards\n                    if(px===x && y - py ===1){\n                        if(!this.tileIsOccupied(x,y,boardState)){\n                        return true;\n                        }\n                    }\n                }\n            } else {\n                // opponent's piece\n                if(py===6){\n                        if(px===x && (y-py===-1 || y-py ===-2)){\n                            if(!this.tileIsOccupied(x,y,boardState)){\n                                return true;\n                        }\n                    }\n                }else{\n                        if(px===x && y-py ===-1 ){\n                            return true;\n                        }\n                }\n            }\n        return false;\n        }\n    }\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,qCAAqC;AAC/D,SAAQC,QAAQ,QAAO,qCAAqC;AAK5D,eAAe,MAAMC,OAAO;EACxBC,cAAcA,CAACC,CAAS,EAACC,CAAS,EAAEC,UAAmB,EAAS;IAC5D,MAAMC,KAAK,GAAGD,UAAU,CAACE,IAAI,CAACC,CAAC,IAAGA,CAAC,CAACL,CAAC,KAAGA,CAAC,IAAIK,CAAC,CAACJ,CAAC,KAAGA,CAAC,CAAC;IACrD,OAAOE,KAAK,IAAEG,SAAS;EAC3B;EAIAC,WAAWA,CAACC,EAAS,EAAEC,EAAS,EAAET,CAAQ,EAAEC,CAAQ,EAAES,IAAc,EAAEC,IAAa,EAAET,UAAkB,EAAC;IACpGU,OAAO,CAACC,GAAG,CAAC,6BAA6BH,IAAI,EAAE,CAAC;IAEhD,IAAGA,IAAI,KAAKd,SAAS,CAACkB,IAAI,EAAC;MACvB;MACA,IAAGH,IAAI,KAAKd,QAAQ,CAACkB,GAAG,EAAC;QACrB;QACA,IAAGN,EAAE,KAAG,CAAC,EAAC;UACN;UACA,IAAGD,EAAE,KAAGR,CAAC,IAAIC,CAAC,GAACQ,EAAE,KAAG,CAAC,EAAC;YAClB,IAAG,CAAC,IAAI,CAACV,cAAc,CAACC,CAAC,EAACC,CAAC,EAACC,UAAU,CAAC,EAAC;cACpC,OAAO,IAAI;YACf;UACJ,CAAC,MAAM,IAAGM,EAAE,KAAKR,CAAC,IAAIC,CAAC,GAACQ,EAAE,KAAI,CAAC,EAAC;YAC5B,IAAG,CAAC,IAAI,CAACV,cAAc,CAACC,CAAC,EAACC,CAAC,EAACC,UAAU,CAAC,IAAI,CAAC,IAAI,CAACH,cAAc,CAACC,CAAC,EAACC,CAAC,GAAC,CAAC,EAACC,UAAU,CAAC,EAAC;cAC1EU,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;cAC5B,OAAO,IAAI;YACnB;UACJ;QACJ,CAAC,MAAK;UACF;UACA;UACA,IAAGL,EAAE,KAAGR,CAAC,IAAIC,CAAC,GAAGQ,EAAE,KAAI,CAAC,EAAC;YACrB,IAAG,CAAC,IAAI,CAACV,cAAc,CAACC,CAAC,EAACC,CAAC,EAACC,UAAU,CAAC,EAAC;cACxC,OAAO,IAAI;YACX;UACJ;QACJ;MACJ,CAAC,MAAM;QACH;QACA,IAAGO,EAAE,KAAG,CAAC,EAAC;UACF,IAAGD,EAAE,KAAGR,CAAC,KAAKC,CAAC,GAACQ,EAAE,KAAG,CAAC,CAAC,IAAIR,CAAC,GAACQ,EAAE,KAAI,CAAC,CAAC,CAAC,EAAC;YACnC,IAAG,CAAC,IAAI,CAACV,cAAc,CAACC,CAAC,EAACC,CAAC,EAACC,UAAU,CAAC,EAAC;cACpC,OAAO,IAAI;YACnB;UACJ;QACJ,CAAC,MAAI;UACG,IAAGM,EAAE,KAAGR,CAAC,IAAIC,CAAC,GAACQ,EAAE,KAAI,CAAC,CAAC,EAAE;YACrB,OAAO,IAAI;UACf;QACR;MACJ;MACJ,OAAO,KAAK;IACZ;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}