{"ast":null,"code":"import { PieceType } from \"../components/Chessboard/Chessboard\";\nimport { TeamType } from \"../components/Chessboard/Chessboard\";\nexport default class Referee {\n  tileIsOccupied(x, y, boardState) {\n    const piece = boardState.find(p => p.x === x && p.y === y);\n    return piece != undefined;\n  }\n  isValidMove(px, py, x, y, type, team, boardState) {\n    console.log(`referee checking.. piece: ${type}`);\n    if (type === PieceType.PAWN) {\n      const specialRow = team === TeamType.OUR ? 1 : 6;\n      const pawnDirection = team === TeamType.OUR ? 1 : -1;\n      if (px === x && py === specialRow && y - py === 2 * pawnDirection) {\n        if (!this.tileIsOccupied(x, y, boardState) && !this.tileIsOccupied(x, y - pawnDirection, boardState)) {\n          return true;\n        }\n      } else if (px === x && y - py === pawnDirection) {\n        if (!this.tileIsOccupied(x, y, boardState)) {\n          return true;\n        }\n      }\n      return false;\n    }\n  }\n}","map":{"version":3,"names":["PieceType","TeamType","Referee","tileIsOccupied","x","y","boardState","piece","find","p","undefined","isValidMove","px","py","type","team","console","log","PAWN","specialRow","OUR","pawnDirection"],"sources":["/home/Outer/Documents/chess-app/src/referee/Referee.ts"],"sourcesContent":["import { PieceType } from \"../components/Chessboard/Chessboard\";\nimport {TeamType} from \"../components/Chessboard/Chessboard\"\nimport {Piece} from \"../components/Chessboard/Chessboard\"\n\n\n\nexport default class Referee{\n    tileIsOccupied(x: number,y: number, boardState: Piece[]):boolean{\n        const piece = boardState.find(p=> p.x===x && p.y===y)\n        return piece!=undefined;\n    }\n\n\n\n    isValidMove(px:number, py:number, x:number, y:number, type:PieceType, team:TeamType, boardState:Piece[]){\n        console.log(`referee checking.. piece: ${type}`);\n        \n        if(type === PieceType.PAWN){\n            const specialRow = (team === TeamType.OUR)?1:6;\n            const pawnDirection = (team === TeamType.OUR)? 1:-1;\n\n            if(px===x && py===specialRow && y-py===2*pawnDirection){\n                if(!this.tileIsOccupied(x,y,boardState) && !this.tileIsOccupied(x,y - pawnDirection, boardState)){\n                    return true;\n                }\n            }else if(px===x && y-py===pawnDirection){\n                    if(!this.tileIsOccupied(x,y,boardState)){\n                        return true;\n                    }\n            }\n            return false;\n        }\n    }\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,qCAAqC;AAC/D,SAAQC,QAAQ,QAAO,qCAAqC;AAK5D,eAAe,MAAMC,OAAO;EACxBC,cAAcA,CAACC,CAAS,EAACC,CAAS,EAAEC,UAAmB,EAAS;IAC5D,MAAMC,KAAK,GAAGD,UAAU,CAACE,IAAI,CAACC,CAAC,IAAGA,CAAC,CAACL,CAAC,KAAGA,CAAC,IAAIK,CAAC,CAACJ,CAAC,KAAGA,CAAC,CAAC;IACrD,OAAOE,KAAK,IAAEG,SAAS;EAC3B;EAIAC,WAAWA,CAACC,EAAS,EAAEC,EAAS,EAAET,CAAQ,EAAEC,CAAQ,EAAES,IAAc,EAAEC,IAAa,EAAET,UAAkB,EAAC;IACpGU,OAAO,CAACC,GAAG,CAAC,6BAA6BH,IAAI,EAAE,CAAC;IAEhD,IAAGA,IAAI,KAAKd,SAAS,CAACkB,IAAI,EAAC;MACvB,MAAMC,UAAU,GAAIJ,IAAI,KAAKd,QAAQ,CAACmB,GAAG,GAAE,CAAC,GAAC,CAAC;MAC9C,MAAMC,aAAa,GAAIN,IAAI,KAAKd,QAAQ,CAACmB,GAAG,GAAG,CAAC,GAAC,CAAC,CAAC;MAEnD,IAAGR,EAAE,KAAGR,CAAC,IAAIS,EAAE,KAAGM,UAAU,IAAId,CAAC,GAACQ,EAAE,KAAG,CAAC,GAACQ,aAAa,EAAC;QACnD,IAAG,CAAC,IAAI,CAAClB,cAAc,CAACC,CAAC,EAACC,CAAC,EAACC,UAAU,CAAC,IAAI,CAAC,IAAI,CAACH,cAAc,CAACC,CAAC,EAACC,CAAC,GAAGgB,aAAa,EAAEf,UAAU,CAAC,EAAC;UAC7F,OAAO,IAAI;QACf;MACJ,CAAC,MAAK,IAAGM,EAAE,KAAGR,CAAC,IAAIC,CAAC,GAACQ,EAAE,KAAGQ,aAAa,EAAC;QAChC,IAAG,CAAC,IAAI,CAAClB,cAAc,CAACC,CAAC,EAACC,CAAC,EAACC,UAAU,CAAC,EAAC;UACpC,OAAO,IAAI;QACf;MACR;MACA,OAAO,KAAK;IAChB;EACJ;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}