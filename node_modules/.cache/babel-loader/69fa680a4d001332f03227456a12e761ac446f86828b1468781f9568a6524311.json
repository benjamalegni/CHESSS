{"ast":null,"code":"var _jsxFileName = \"/home/Outer/Documents/chess-app/src/components/Chessboard/Chessboard.tsx\",\n  _s = $RefreshSig$();\nimport './Chessboard.css';\nimport Tile from '../Tile/Tile';\nimport Referee from '../../referee/Referee';\nimport { useRef, useState } from 'react';\nimport { TeamType, PieceType } from '../../Constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst N = 8;\nexport default function Chessboard() {\n  _s();\n  const [activePiece, setActivePiece] = useState(null);\n  const [xAxis, setXAxis] = useState(0);\n  const [yAxis, setYAxis] = useState(0);\n  const [pieces, setPieces] = useState(initialBoardState);\n  const chessboardRef = useRef(null);\n  const referee = new Referee();\n  function grabPiece(e) {\n    const chessboard = chessboardRef.current;\n    const element = e.target;\n    if (element.classList.contains(\"chess-piece\") && chessboard) {\n      setXAxis(Math.floor((e.clientX - chessboard.offsetLeft) / 100));\n      setYAxis(Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / 100)));\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      element.style.position = \"absolute\";\n      element.style.left = `${x}px`;\n      element.style.top = `${y}px`;\n      setActivePiece(element);\n    }\n  }\n  function movePiece(e) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      const x = e.clientX - 50;\n      const y = e.clientY - 50;\n      const minX = chessboard.offsetLeft - 25;\n      const minY = chessboard.offsetTop - 25;\n      const maxX = chessboard.offsetLeft + chessboard.clientWidth - 75;\n      const maxY = chessboard.offsetTop + chessboard.clientHeight - 75;\n      activePiece.style.position = \"absolute\";\n\n      // x axis limits\n      if (x < minX) {\n        activePiece.style.left = `${minX}px`;\n      } else if (x > maxX) {\n        activePiece.style.left = `${maxX}px`;\n      } else {\n        activePiece.style.left = `${x}px`;\n      }\n\n      // y axis limits\n      if (y < minY) {\n        activePiece.style.top = `${minY}px`;\n      } else if (y > maxY) {\n        activePiece.style.top = `${maxY}px`;\n      } else {\n        activePiece.style.top = `${y}px`;\n      }\n    }\n  }\n  function dropPiece(e) {\n    const chessboard = chessboardRef.current;\n    if (activePiece && chessboard) {\n      // substracted 800 to align with chessboard axis (starting from bottom left)\n      const x = Math.floor((e.clientX - chessboard.offsetLeft) / 100);\n      const y = Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800) / 100));\n      const currentPiece = pieces.find(p => p.x === xAxis && p.y === yAxis);\n      const attackedPiece = pieces.find(p => p.x === x && p.y === y);\n      if (currentPiece) {\n        const validMove = referee.isValidMove(xAxis, yAxis, x, y, currentPiece.type, currentPiece.team, pieces);\n        const isEnPassantMove = referee.isEnPassantMove(xAxis, yAxis, x, y, currentPiece.type, currentPiece.team, pieces);\n        const pawnDirecion = currentPiece.team === TeamType.OUR ? 1 : -1;\n        if (isEnPassantMove) {\n          const updatedPieces = pieces.reduce((results, piece) => {\n            if (piece.x === xAxis && piece.y === yAxis) {\n              piece.enPassant = false;\n              piece.x = x;\n              piece.y = y;\n              results.push(piece);\n            } else if (!(piece.x === x && piece.y === y - pawnDirecion)) {\n              if (piece.type === PieceType.PAWN) {\n                piece.enPassant = false;\n              }\n              results.push(piece);\n            }\n            return results;\n          }, []);\n          setPieces(updatedPieces);\n        } else if (validMove) {\n          const updatedPieces = pieces.reduce((results, piece) => {\n            if (piece.x === xAxis && piece.y === yAxis) {\n              if (Math.abs(yAxis - y) === 2 && piece.type === PieceType.PAWN) {\n                piece.enPassant = true;\n              }\n              piece.x = x;\n              piece.y = y;\n              results.push(piece);\n            } else if (!(piece.x === x && piece.y === y)) {\n              if (piece.type === PieceType.PAWN) {\n                piece.enPassant = false;\n              }\n              results.push(piece);\n            }\n            return results;\n          }, []);\n          setPieces(updatedPieces);\n        } else {\n          //reset piece position\n          activePiece.style.position = 'relative';\n          activePiece.style.removeProperty(\"top\");\n          activePiece.style.removeProperty(\"left\");\n        }\n      }\n      setActivePiece(null);\n    }\n  }\n  let board = [];\n  for (let y = N - 1; y >= 0; y--) {\n    for (let x = 0; x < N; x++) {\n      // check whether the sum of numbers x,y is even to draw each tile\n      const isEven = (x + y + 2) % 2 === 0;\n      let img = undefined;\n      pieces.forEach(p => {\n        if (p.x === x && p.y === y) {\n          img = p.image;\n        }\n      });\n      board.push(/*#__PURE__*/_jsxDEV(Tile, {\n        isEven: isEven,\n        image: img\n      }, `${x},${y}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }, this));\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onMouseMove: e => movePiece(e),\n    onMouseDown: e => grabPiece(e),\n    onMouseUp: e => dropPiece(e),\n    id: \"chessboard\",\n    ref: chessboardRef,\n    children: board\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 12\n  }, this);\n}\n_s(Chessboard, \"xQBrAfT1m9ZNj2doAbats/XZKt4=\");\n_c = Chessboard;\nvar _c;\n$RefreshReg$(_c, \"Chessboard\");","map":{"version":3,"names":["Tile","Referee","useRef","useState","TeamType","PieceType","jsxDEV","_jsxDEV","N","Chessboard","_s","activePiece","setActivePiece","xAxis","setXAxis","yAxis","setYAxis","pieces","setPieces","initialBoardState","chessboardRef","referee","grabPiece","e","chessboard","current","element","target","classList","contains","Math","floor","clientX","offsetLeft","abs","ceil","clientY","offsetTop","x","y","style","position","left","top","movePiece","minX","minY","maxX","clientWidth","maxY","clientHeight","dropPiece","currentPiece","find","p","attackedPiece","validMove","isValidMove","type","team","isEnPassantMove","pawnDirecion","OUR","updatedPieces","reduce","results","piece","enPassant","push","PAWN","removeProperty","board","isEven","img","undefined","forEach","image","fileName","_jsxFileName","lineNumber","columnNumber","onMouseMove","onMouseDown","onMouseUp","id","ref","children","_c","$RefreshReg$"],"sources":["/home/Outer/Documents/chess-app/src/components/Chessboard/Chessboard.tsx"],"sourcesContent":["import './Chessboard.css';\nimport Tile from '../Tile/Tile'\nimport Referee from '../../referee/Referee'\nimport { useRef, useState } from 'react';\nimport { xAxis,yAxis, Piece, TeamType, PieceType } from '../../Constants';\n\nconst N = 8;\n\n\n\nexport default function Chessboard(){\nconst [activePiece, setActivePiece] = useState<HTMLElement | null>(null)\nconst [xAxis,setXAxis] = useState(0);\nconst [yAxis,setYAxis] = useState(0);\nconst [pieces, setPieces] = useState<Piece[]>(initialBoardState);\nconst chessboardRef = useRef<HTMLDivElement>(null);\nconst referee = new Referee();\n\nfunction grabPiece(e: React.MouseEvent){\n    const chessboard = chessboardRef.current;\n    const element = e.target as HTMLElement;\n\n    if(element.classList.contains(\"chess-piece\") && chessboard){\n        setXAxis(Math.floor((e.clientX - chessboard.offsetLeft)/100));\n        setYAxis(Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800)/100)));\n\n\n        const x = e.clientX -50;\n        const y = e.clientY -50;\n        element.style.position=\"absolute\";\n        element.style.left = `${x}px`;\n        element.style.top = `${y}px`;\n\n\n\n        setActivePiece(element);\n    }\n}\n\nfunction movePiece(e: React.MouseEvent){\n    const chessboard = chessboardRef.current;\n    if(activePiece && chessboard){\n        const x = e.clientX -50;\n        const y = e.clientY -50;\n\n        const minX = chessboard.offsetLeft -25;\n        const minY = chessboard.offsetTop -25;\n        const maxX = chessboard.offsetLeft + chessboard.clientWidth -75 ;\n        const maxY = chessboard.offsetTop + chessboard.clientHeight -75;\n\n        activePiece.style.position=\"absolute\";\n\n\n        // x axis limits\n        if(x<minX){\n            activePiece.style.left = `${minX}px`;\n        } else if(x>maxX){\n            activePiece.style.left = `${maxX}px`;\n        } else{\n            activePiece.style.left = `${x}px`;\n        }\n\n        // y axis limits\n        if(y<minY){\n            activePiece.style.top = `${minY}px`;\n        } else if(y>maxY){\n            activePiece.style.top = `${maxY}px`;\n        } else{\n            activePiece.style.top = `${y}px`;\n        }\n        \n    }\n}\n\nfunction dropPiece(e: React.MouseEvent){\n    const chessboard = chessboardRef.current;\n    if(activePiece && chessboard){\n        // substracted 800 to align with chessboard axis (starting from bottom left)\n        const x=Math.floor((e.clientX - chessboard.offsetLeft)/100);\n        const y=Math.abs(Math.ceil((e.clientY - chessboard.offsetTop - 800)/100));\n\n        const currentPiece = pieces.find((p)=> p.x===xAxis && p.y===yAxis);\n        const attackedPiece = pieces.find((p)=> p.x===x && p.y===y);       \n        if(currentPiece){\n            const validMove = referee.isValidMove(xAxis,yAxis,x,y,currentPiece.type,currentPiece.team, pieces);\n            const isEnPassantMove = referee.isEnPassantMove(xAxis,yAxis,x,y,currentPiece.type,currentPiece.team, pieces)\n            const pawnDirecion = currentPiece.team === TeamType.OUR?1:-1;\n\n            if(isEnPassantMove){\n                const updatedPieces = pieces.reduce((results, piece)=>{\n                    if(piece.x===xAxis && piece.y===yAxis){\n                        piece.enPassant=false;\n                        piece.x=x;\n                        piece.y=y;\n                        results.push(piece);\n                    }else if(!(piece.x===x && piece.y===y - pawnDirecion)){\n                        if(piece.type===PieceType.PAWN){\n                            piece.enPassant=false;\n                        }\n                        results.push(piece);\n                    }                   \n\n\n                    return results;\n                }, [] as Piece[])\n                setPieces(updatedPieces);\n            }else if(validMove){\n                const updatedPieces = pieces.reduce((results,piece)=>{\n                    if(piece.x===xAxis && piece.y===yAxis){\n                        if(Math.abs(yAxis-y)===2 &&(piece.type===PieceType.PAWN)){\n                            piece.enPassant=true;\n                        }\n                        piece.x=x;\n                        piece.y=y;\n                        results.push(piece);\n                    }else if(!(piece.x===x && piece.y===y)){\n                        if(piece.type===PieceType.PAWN){\n                            piece.enPassant=false;\n                        }\n                        results.push(piece);\n                    }                  \n\n                    return results;\n                }, [] as Piece[])\n                setPieces(updatedPieces);\n            }else{\n                //reset piece position\n                    activePiece.style.position= 'relative';\n                    activePiece.style.removeProperty(\"top\");\n                    activePiece.style.removeProperty(\"left\");\n\n            }\n        }\n\n        \n        setActivePiece(null);\n    }\n}\n\n\n\n    let board = [];\n\n    for(let y=N-1;y>=0;y--){\n        for(let x=0;x<N;x++){\n\n            // check whether the sum of numbers x,y is even to draw each tile\n            const isEven = (x+y+2)%2===0;\n            let img = undefined;\n\n            pieces.forEach(p=> {\n                if(p.x===x && p.y===y){\n                    img=p.image\n                }\n            })\n\n            \n            board.push(\n                    <Tile key={`${x},${y}`} isEven={isEven} image={img}/> \n            )\n        }\n        }       \n\n\n    return <div \n        onMouseMove={(e)=>movePiece(e)} \n        onMouseDown={e=> grabPiece(e)} \n        onMouseUp={(e)=> dropPiece(e)}\n        id=\"chessboard\"\n        ref={chessboardRef}>\n            {board}\n    </div>\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}